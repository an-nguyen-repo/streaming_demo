version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"    
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc localhost 2181 || exit 1
      interval: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 29092
      interval: 10s
      retries: 3

  txn-kafka-producer:
    image: txn-kafka-producer
    depends_on:
      - kafka 
    environment:
      KAFKA_SERVER: "kafka:29092"
      ZOOKEEPER_SERVER: "zookeeper:2181"
      PRODUCER_INTERVAL: 100
  
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: frauddb
    volumes:
        - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d frauddb"]
      interval: 10s
      timeout: 5s
      retries: 5

  txn-anverage-analyzer:
    image: txn-processor
    command: /bin/bash -c "python average_analyzer.py"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      KAFKA_SERVER: "kafka:29092"
      ZOOKEEPER_SERVER: "zookeeper:2181"
      PRODUCER_INTERVAL: 100

  txn-proximity-analyzer:
    image: txn-processor
    command: /bin/bash -c "python proximity_analyzer.py"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      KAFKA_SERVER: "kafka:29092"
      ZOOKEEPER_SERVER: "zookeeper:2181"
      PRODUCER_INTERVAL: 100

  txn-counter-analyzer:
    image: txn-processor
    command: /bin/bash -c "python counter_analyzer.py"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      KAFKA_SERVER: "kafka:29092"
      ZOOKEEPER_SERVER: "zookeeper:2181"
      PRODUCER_INTERVAL: 100

  txn-score-aggregator:
    image: txn-processor
    command: /bin/bash -c "python score_aggregator.py"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      KAFKA_SERVER: "kafka:29092"
      ZOOKEEPER_SERVER: "zookeeper:2181"
      PRODUCER_INTERVAL: 100

  txn-aggregated-score-producer:
    image: txn-processor
    command: /bin/bash -c "python aggregated_score_producer.py"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      KAFKA_SERVER: "kafka:29092"
      ZOOKEEPER_SERVER: "zookeeper:2181"
      PRODUCER_INTERVAL: 100
  
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    environment:
      GF_AUTH_DISABLE_LOGIN_FORM: "false"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  postgres_data:
  grafana-storage: